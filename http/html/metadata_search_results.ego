<%
package html

import (
    "strings"
    "github.com/knakk/sirkulator/search"
    "github.com/knakk/sirkulator/internal/localizer"
)


type SearchResultsTmpl struct {
    Results search.Results
    SortBy string
    SortAsc bool
}

const dateFormat = "2006-01-02 15:04:05"

func (sr *SearchResultsTmpl) Render(ctx context.Context, w io.Writer) {
    l, _ := ctx.Value("localizer").(localizer.Localizer)

    for _, hit := range sr.Results.Hits { %>
        <tr>
            <td><%= hit.Type %></td>
            <td>
                <a href="<%= fmt.Sprintf("/metadata/%s/%s", strings.ToLower(hit.Type), hit.ID) %>">
                    <%= hit.Label %>
                </a>
            </td>
            <td><%= hit.CreatedAt.Format(dateFormat) %></td>
            <td><%= hit.UpdatedAt.Format(dateFormat) %></td>
        </tr>
<%   } %>
    <tr>
        <td>
            <input type="hidden" name="sort_by" value="<%= sr.SortBy %>">
            <input type="hidden" name="sort_asc" value="<%= sr.SortAsc %>">
        </td>
        <td colspan="3"><small><%= l.Translate("%d hits (%v)", sr.Results.Total, sr.Results.Time ) %></small></td>
    </tr>
<% } %>
