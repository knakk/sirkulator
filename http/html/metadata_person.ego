<%
package html

import (
    "fmt"
    "strconv"
    "strings"

    "github.com/knakk/sirkulator"
    "github.com/knakk/sirkulator/internal/localizer"
    "github.com/knakk/sirkulator/marc"
    "github.com/knakk/sirkulator/vocab"
)

type PersonTemplate struct {
    Page
    Resource sirkulator.Resource
    Contributions []sirkulator.AgentContribution
}

// TODO move util functions out to html.go ?
func resourceLink(r sirkulator.SimpleResource) string {
    return fmt.Sprintf("/metadata/%s/%s", r.Type, r.ID)
}

// TODO move util functions out to html.go ?
func printRoles(roles []marc.Relator, l localizer.Localizer) string {
    var sb strings.Builder
    for i, role := range roles {
        if i > 0 {
            sb.WriteString(", ")
        }
        sb.WriteString(role.Label(l.Lang))
    }
    return sb.String()
}

// TODO move util functions out to html.go ?
func notZero(n int) string {
    if n != 0 {
        return strconv.Itoa(n)
    }
    return ""
}

func (tmpl *PersonTemplate) Render(ctx context.Context, w io.Writer) {
    l, _ := ctx.Value("localizer").(localizer.Localizer)
    person := tmpl.Resource.Data.(*sirkulator.Person)
%><ego:App Page=tmpl.Page>
    <div class="sticky-top-left">
        <button
            class="save-resource"
            hx-post="/metadata/person/<%= tmpl.Resource.ID %>"
            hx-target="#person-form"
            hx-include="#person-form">
            Lagre
        </button>
        <p class="error" id="save-error-message"></p>
        <p id="save-message"></p>
    </div>
    <details open>
        <summary>
            <h3><%= tmpl.Resource.Label %></h3>
        </summary>
        <div class="border row">
            <div class="column column-wide pad">
                <h4><%= l.Translate("Properties") %></h4>
                <p><br/></p>
                <ego:PersonForm
                    Person=person
                    Localizer=l
                    UpdatedAt=tmpl.Resource.UpdatedAt.Unix() />
            </div>
            <div class="column pad">
                <h4><%= l.Translate("Identificators and links") %></h4>
                <p><br/></p>
                <table>
                    <% for _, link := range tmpl.Resource.Links {
                        id := vocab.ParseIdentifier(link[0], link[1])
                        %>
                        <tr>
                            <td><%= id.Label %></td>
                            <td>
                                <% if id.URL != "" { %>
                                    <a href="<%= id.URL %>"><%= id.Value %></a>
                                <% } else { %>
                                    <%= id.Value %>
                                <% } %>
                            </td>
                        </tr>
                    <% } %>
                </table>

            </div>
        </div>
    </details>

    <br/>

    <details open>
        <summary>
            <h3><%= l.Translate("Publications and contributions") %></h3>
        </summary>
        <div class="border pad">
            <table>
                <thead>
                    <tr>
                        <th><%= l.Translate("Role") %></th>
                        <th class="clickable sortable"
                            hx-post="/metadata/person/<%= tmpl.Resource.ID %>/contributions"
                            hx-include="[name='sort_asc']"
                            hx-vals='{"sort_by": "year"}'
                            hx-target="#agent_contributions"
                            hx-swap="outerHTML">
                            <%= l.Translate("Year") %>
                        </th>
                        <th class="clickable sortable"
                            hx-post="/metadata/person/<%= tmpl.Resource.ID %>/contributions"
                            hx-include="[name='sort_asc']"
                            hx-vals='{"sort_by": "label"}'
                            hx-target="#agent_contributions"
                            hx-swap="outerHTML">
                            <%= l.Translate("Publication") %>
                        </th>
                    </tr>
                </thead>
                <tbody id="agent_contributions">
                    <% for _, c := range tmpl.Contributions { %>
                        <tr>
                            <td>
                                <%= printRoles(c.Roles, l) %>
                            </td>
                            <td><%= notZero(c.Year) %></td>
                            <td>
                                <a href="<%= resourceLink(c.SimpleResource) %>"><%= c.Label %></a>
                            </td>
                        </tr>
                    <% } %>
                    <tr>
                        <td colspan="3">
                            <input type="hidden" name="sort_by" value="year">
                            <input type="hidden" name="sort_asc" value="false">
                        </td>
                    </tr>
                </tbody>
            </table>

        </div>
    </details>

    <br/>

    <details open>
        <summary>
            <h3><%= l.Translate("Other relations") %></h3>
        </summary>
        <div class="border pad">

        </div>
    </details>
    <script>
        document.body.addEventListener("htmx:beforeSwap", function(evt) {
            if (evt.target.id !== "person-form") {
                // not a save resource request
                return;
            }
            if (evt.detail.xhr.status === 404){
                document.getElementById("save-error-message")
                    .innerHTML = "<%= l.Translate("Resource not found.") %>";
            } else if (evt.detail.xhr.status === 409) {
                document.getElementById("save-message")
                    .innerHTML = "";
                evt.detail.shouldSwap = true;
                evt.detail.isError = false; // avoid error logging in console
                evt.detail.target = htmx.find("#save-error-message");
            } else if (evt.detail.xhr.status === 400) {
                document.getElementById("save-error-message")
                    .innerHTML = "<%= l.Translate("Validation failed. Check input fields.") %>";
                evt.detail.shouldSwap = true;
                // form is populated again, error messages displayed by CSS rules
            } else if (evt.detail.xhr.status === 200) {
                document.getElementById("save-error-message")
                    .innerHTML = "";
                document.getElementById("save-message")
                    .innerHTML = "<%= l.Translate("OK, saved.") %>";
            } else if (evt.detail.xhr.status === 204) {
                 document.getElementById("save-error-message")
                    .innerHTML = "";
                 document.getElementById("save-message")
                    .innerHTML = "<%= l.Translate("No changes.") %>";
            }
        });

        document.body.addEventListener('htmx:sendError', function(evt) {
             if (evt.target.id !== "person-form") {
                return;
            }
            document.getElementById("save-message")
                    .innerHTML = "";
            document.getElementById("save-error-message")
                .innerHTML = "<%= l.Translate("Network error. Server unreachable. Check your connection") %>";
        });


        function removeTerm(e) {
            e.target.closest("li").remove();
        };

         // TODO create "selected-term" web component and bundle removal js code with it
        document.querySelectorAll(".unselect-term").forEach(
            e => e.addEventListener("click", (e) => removeTerm(e)));

    </script>
</ego:App>
<% } %>
