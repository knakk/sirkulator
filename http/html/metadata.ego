<%
package html

import (
    "github.com/knakk/sirkulator"
    "github.com/knakk/sirkulator/internal/localizer"
)

type MetadataTemplate struct {
    Page
}

func (tmpl *MetadataTemplate) Render(ctx context.Context, w io.Writer) {
    l, _ := ctx.Value("localizer").(localizer.Localizer)
%><ego:App Page=tmpl.Page>
    <details>
        <summary>
            <h3><%= l.Translate("Show metadata for review") %></h3>
        </summary>
        <div>
            <p>TODO: Table goes here</p>
        </div>
    </details>

    <br/>

    <details>
        <summary>
            <h3><%= l.Translate("Search/browse catalogue") %></h3>
        </summary>
        <div>
            <table class="metadata-search-results">
                <thead>
                    <tr>
                        <th>
                            <select name="type"
                                hx-post="/metadata/search"
                                hx-include="[name='q']"
                                hx-target="#search-results">
                                <option value="">Alle typer</option>
                                <% for _, t := range sirkulator.AllResourceTypes() { %>
                                    <option value="<%= t.String() %>"><%= t.Label(l.Lang) %></option>
                                <% } %>
                            </select>
                        </th>
                        <th>
                            <input name="q"
                                hx-post="/metadata/search"
                                hx-include="[name='type']"
                                hx-trigger="keyup changed delay:200ms, search"
                                hx-target="#search-results"
                                type="search" placeholder="SÃ¸k">
                        </th>
                        <th class="clickable sortable" hx-post="/metadata/search"
                            hx-include="[name='q'], [name='type'], [name='sort_asc']"
                            hx-vals='{"sort_by": "created"}'
                            hx-target="#search-results">
                            Opprettet
                        </th>
                        <th class="clickable sortable" hx-post="/metadata/search"
                            hx-include="[name='q'], [name='type'], [name='sort_asc']"
                            hx-vals='{"sort_by": "updated"}'
                            hx-target="#search-results">
                            Endret
                        </th>
                    </tr>
                </thead>
                <tbody id="search-results">
                </tbody>
            </table>
        </div>
    </details>

    <br/>

    <details>
        <summary>
            <h3><%= l.Translate("Import") %></h3>
        </summary>
        <div class="border pad">
            <form hx-post="/metadata/import" hx-target="#import-results" hx-indicator=".htmx-inflight">
                <div class="row border">
                    <div class="column pad">
                        <label for="identifiers"><%= l.Translate("Identifiers") %></label>
                        <textarea name="identifiers" rows="3"></textarea><br/>
                    </div>
                    <div class="column pad content-bottom">
                        <p>
                            <%= l.Translate("ISBN, ISSN or EAN") %><br/>
                            <%= l.Translate("1 per line") %></p>
                        <p></br></p>
                        <div class="row">
                            <div class="column">
                                <button hx-post="/metadata/preview" hx-indicator=".htmx-inflight" hx-target="#import-results"><%= l.Translate("Preview") %></button>
                            </div>
                            <div class="column pad-left" class="submit">
                                <button><%= l.Translate("Import") %></button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="border pad">
            <div id="import-indicator"class="htmx-import-indicator htmx-inflight"><%= l.Translate("wait...") %></div>
            <div id="import-results" class="htmx-request-indicator htmx-inflight"></div>
        </div>
    </details>
</ego:App>
<% } %>
